/// <reference types="node" />
export declare class Bytes {
    private static readonly isHex;
    static from(hex: string, prefix?: string): Bytes;
    readonly buffer: Buffer;
    constructor(buf: Buffer);
    toString(prefix?: string): string;
    trimLeft(v?: number): Bytes;
}
export declare class Address {
    static from(hex: string, prefix?: string): Address;
    readonly buffer: Buffer;
    constructor(buf: Buffer);
    toString(prefix?: string): string;
}
export declare class Bytes32 {
    static from(hex: string, prefix?: string): Bytes32;
    readonly buffer: Buffer;
    constructor(buf: Buffer);
    toString(prefix?: string): string;
}
import { BigNumber } from 'bignumber.js';
export declare class BigInt {
    static from(v: number | string | BigNumber): BigInt;
    readonly buffer: Buffer;
    constructor(buf: Buffer);
    toBigNumber(): BigNumber;
    toString(base?: 16 | 10): string;
}
