"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const debug = require("debug")("thor:injector");
/* tslint:disable:max-line-length */
const extendFormatters = function (web3) {
    web3.extend.formatters.outputTransactionFormatter = function (tx) {
        debug("outputTransactionFormatter");
        tx.gas = web3.extend.utils.hexToNumber(tx.gas);
        tx.chainTag = web3.extend.utils.numberToHex(tx.chainTag);
        if (tx.origin) {
            tx.origin = web3.extend.utils.toChecksumAddress(tx.origin);
        }
        if (tx.clauses) {
            for (const clause of tx.clauses) {
                clause.value = web3.extend.formatters.outputBigNumberFormatter(clause.value);
                if (clause.to && web3.extend.utils.isAddress(clause.to)) { // tx.to could be `0x0` or `null` while contract creation
                    clause.to = web3.extend.utils.toChecksumAddress(clause.to);
                }
                else {
                    clause.to = null; // set to `null` if invalid address
                }
            }
        }
        return tx;
    };
    web3.extend.formatters.outputTransactionReceiptFormatter = function (receipt) {
        debug("outputTransactionReceiptFormatter");
        if (typeof receipt !== "object") {
            throw new Error("Received receipt is invalid: " + receipt);
        }
        if (receipt.hasOwnProperty("transactionIndex")) {
            delete receipt.transactionIndex;
        }
        if (receipt.hasOwnProperty("cumulativeGasUsed")) {
            delete receipt.cumulativeGasUsed;
        }
        receipt.gasUsed = web3.extend.utils.hexToNumber(receipt.gasUsed);
        if (receipt.gasPayer) {
            receipt.gasPayer = web3.extend.utils.toChecksumAddress(receipt.gasPayer);
        }
        if (receipt.tx.origin) {
            receipt.tx.origin = web3.extend.utils.toChecksumAddress(receipt.tx.origin);
        }
        for (const output of receipt.outputs) {
            if (web3.extend.utils._.isArray(output.logs)) {
                output.logs = output.logs.map(web3.extend.formatters.outputLogFormatter);
            }
            if (output.contractAddress) {
                output.contractAddress = web3.utils.toChecksumAddress(output.contractAddress);
            }
        }
        return receipt;
    };
    web3.extend.formatters.outputLogFormatter = function (log) {
        debug("outputLogFormatter");
        if (log.hasOwnProperty("transactionIndex:")) {
            delete log.transactionIndex;
        }
        if (log.hasOwnProperty("logIndex")) {
            delete log.logIndex;
        }
        if (log.hasOwnProperty("id")) {
            delete log.id;
        }
        if (log.blockNumber !== null) {
            log.blockNumber = web3.extend.utils.hexToNumber(log.blockNumber);
        }
        if (log.address) {
            log.address = web3.extend.utils.toChecksumAddress(log.address);
        }
        return log;
    };
};
exports.extendFormatters = extendFormatters;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9ybWF0dGVycy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9leHRlbmQvZm9ybWF0dGVycy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxZQUFZLENBQUM7O0FBQ2IsTUFBTSxLQUFLLEdBQUcsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDLGVBQWUsQ0FBQyxDQUFDO0FBR2hELG9DQUFvQztBQUVwQyxNQUFNLGdCQUFnQixHQUFHLFVBQVMsSUFBUztJQUV6QyxJQUFJLENBQUMsTUFBTSxDQUFDLFVBQVUsQ0FBQywwQkFBMEIsR0FBRyxVQUFTLEVBQW9CO1FBQy9FLEtBQUssQ0FBQyw0QkFBNEIsQ0FBQyxDQUFDO1FBQ3BDLEVBQUUsQ0FBQyxHQUFHLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsV0FBVyxDQUFDLEVBQUUsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUMvQyxFQUFFLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLFdBQVcsQ0FBQyxFQUFFLENBQUMsUUFBUSxDQUFDLENBQUM7UUFFekQsSUFBSSxFQUFFLENBQUMsTUFBTSxFQUFFO1lBQ2IsRUFBRSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxpQkFBaUIsQ0FBQyxFQUFFLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDNUQ7UUFDRCxJQUFJLEVBQUUsQ0FBQyxPQUFPLEVBQUU7WUFDZCxLQUFLLE1BQU0sTUFBTSxJQUFJLEVBQUUsQ0FBQyxPQUFPLEVBQUU7Z0JBQy9CLE1BQU0sQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxVQUFVLENBQUMsd0JBQXdCLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDO2dCQUM3RSxJQUFJLE1BQU0sQ0FBQyxFQUFFLElBQUksSUFBSSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxFQUFF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